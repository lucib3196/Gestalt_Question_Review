{
    "question_payload": {
        "question": "A car moves at a constant speed of $60\\ \\text{km/h}$ for $2\\ \\text{hours}$. What is the total distance traveled? The correct answer is $120\\ \\text{km}$",
        "params": [
            {
                "name": "speed",
                "value": "60",
                "units": "km/h"
            },
            {
                "name": "time",
                "value": "2",
                "units": "hours"
            }
        ],
        "correct_answers": [
            {
                "name": "distance",
                "value": "120",
                "units": "km"
            }
        ],
        "source": null,
        "requires_external_data": false,
        "requires_image": false,
        "completeness": true,
        "additional_information": null,
        "solution": null
    },
    "files_data": {
        "question.html": "<pl-question-panel>\n  <p> A car moves at a constant speed of {{params.speed}} {{params.unitsSpeed}} for {{params.time}} {{params.unitsTime}}. </p>\n  <p> What is the total distance traveled (in {{params.unitsDist}})? </p>\n</pl-question-panel>\n\n<pl-number-input answers-name=\"distance\" comparison=\"sigfig\" digits=\"3\" label=\"Distance (in {{params.unitsDist}})\"></pl-number-input>",
        "server.js": "const math = require('mathjs');\n\nconst generate = (case_ = 0) => {\n    const unitSystems = {\n        si: {\n            speed: 'km/h',\n            distance: 'km',\n            time: 'h'\n        },\n        uscs: {\n            speed: 'mph',\n            distance: 'ft',\n            time: 's'\n        }\n    };\n\n    // Hardcoded Values\n    const PREDEFINED_VALUES = { speed: 60, time: 2 }; // Speed in km/h and time in hours\n    const TEST_VALUES = { speed: 60, time: 2 }; // Same as PREDEFINED_VALUES for testing\n    const CORRECT_ANSWER = 120; // Correct answer for distance in km\n\n    const ABS_TOL = 1e-6;\n    const REL_TOL = 1e-6;\n\n    const selectedSystem = (case_ === 2) ? 'si' : (math.randomInt(0, 2) === 0 ? 'si' : 'uscs');\n    const units = unitSystems[selectedSystem];\n\n    let speed, time;\n    const test_results = { pass: null, message: \"\" };\n\n    if (case_ === 0) {\n        speed = math.randomInt(30, 121);\n        time = math.randomInt(1, 10);\n    } else if (case_ === 1) {\n        speed = PREDEFINED_VALUES.speed;\n        time = PREDEFINED_VALUES.time;\n    } else if (case_ === 2) {\n        if (typeof CORRECT_ANSWER === \"undefined\") {\n            throw new Error(\"Test case unavailable: CORRECT_ANSWER not provided\");\n        }\n        speed = TEST_VALUES.speed;\n        time = TEST_VALUES.time;\n    } else {\n        throw new Error(`Unknown case_: ${case_}`);\n    }\n\n    // Calculate distance: \n    let distance;\n    if (units.speed === 'km/h') {\n        distance = speed * time; // in km\n    } else { // units.speed === 'mph'\n        distance = speed * time * 0.000189394; // convert mph to km\n    }\n\n    // Handling Case 2 for verification with the correct answer\n    if (case_ === 2) {\n        const expected = CORRECT_ANSWER;\n        const diff = Math.abs(distance - expected);\n        const tol = Math.max(ABS_TOL, REL_TOL * Math.abs(expected));\n        const passed = diff <= tol;\n\n        test_results.pass = passed ? 1 : 0;\n        test_results.message = passed\n            ? `PASS — computed=${distance} ${units.distance}, expected=${expected} ${units.distance}`\n            : `FAIL — computed=${distance} ${units.distance}, expected=${expected} ${units.distance}`;\n    }\n\n    return {\n        params: {\n            speed,\n            time,\n            unitsSpeed: units.speed,\n            unitsTime: units.time,\n            unitsDist: units.distance,\n        },\n        correct_answers: {\n            distance: Number(math.round(distance, 3)),\n        },\n        test_results,\n    };\n};\n\nmodule.exports = { generate };",
        "server.py": "import math\nimport random\n\ndef generate(case_: int = 0):\n    # 1. Define the parameter sets for the problem context\n    ORIGINAL_QUESTION = \"A car moves at a constant speed of $60\\ \\text{km/h}$ for $2\\ \\text{hours}$. What is the total distance traveled?\"\n    ORIGINAL_UNITS = \"km\"\n\n    speed_units = ['km/h', 'm/s', 'mi/h', 'ft/s']\n    time_units = ['s', 'min', 'h']\n    distance_units = ['km', 'm', 'mi', 'ft']\n\n    # 2. Predefined values\n    PREDEFINED_VALUES = {'speed': 60, 'unitsSpeed': 'km/h', 'time': 2, 'unitsTime': 'h'}\n    TEST_VALUES = {'speed': 60, 'time': 2}  # speed and time for case 2\n    CORRECT_ANSWER = 120  # expected distance\n\n    ABS_TOL = 1e-6\n    REL_TOL = 1e-6\n\n    # Initialize test results\n    test_results = {'pass': None, 'message': ''}\n    speed = 0\n    time = 0\n    distance = 0\n\n    # 3. Value Generation: random or predefined values\n    if case_ == 0:\n        # Generate random values\n        speed = random.uniform(10, 120)  # speed in km/h\n        time = random.uniform(1, 2)  # time in hours\n    elif case_ == 1:\n        # Use predefined values\n        speed = PREDEFINED_VALUES['speed']\n        time = PREDEFINED_VALUES['time']\n    elif case_ == 2:\n        if CORRECT_ANSWER is None:\n            raise ValueError(\"Test case unavailable: CORRECT_ANSWER not provided\")\n        speed = TEST_VALUES['speed']\n        time = TEST_VALUES['time']\n    else:\n        raise ValueError(f\"Unknown case_: {case_}\")\n\n    # Calculate distance based on speed and time\n    distance = (speed * time) if case_ != 2 else (TEST_VALUES['speed'] * TEST_VALUES['time'])\n\n    # 4. Create the parameters and answers structure\n    params = {\n        'speed_value': round(speed, 3), 'speed_units': PREDEFINED_VALUES['unitsSpeed'], 'speed_symbol': 'v',\n        'time_value': round(time, 3), 'time_units': PREDEFINED_VALUES['unitsTime'], 'time_symbol': 't'\n    }\n    correct_answers = {\n        'distance_value': round(distance, 3), 'distance_units': ORIGINAL_UNITS, 'distance_symbol': 'd'\n    }\n\n    # 5. Verification for case 2\n    if case_ == 2:\n        expected = float(CORRECT_ANSWER)\n        diff = abs(distance - expected)\n        tol = max(ABS_TOL, REL_TOL * abs(expected))\n        passed = diff <= tol\n        test_results['pass'] = 1 if passed else 0\n        test_results['message'] = (\n            f\"PASS — computed={distance} {ORIGINAL_UNITS}, expected={CORRECT_ANSWER} {ORIGINAL_UNITS}\"\n            if passed else\n            f\"FAIL — computed={distance} {ORIGINAL_UNITS}, expected={CORRECT_ANSWER} {ORIGINAL_UNITS}\"\n        )\n\n    return {'params': params, 'correct_answers': correct_answers, 'test_results': test_results}",
        "solution.html": "<pl-solution-panel>\n    <pl-hint level=\"1\" data-type=\"text\">\n        To find the total distance traveled, we can use the formula: $$d = v \\cdot t$$.\n    </pl-hint>\n    <pl-hint level=\"2\" data-type=\"text\">\n        Here, $d$ is the distance, $v$ is the constant speed of the car, and $t$ is the time traveled.\n    </pl-hint>\n    <pl-hint level=\"3\" data-type=\"text\">\n        Substituting the known values, we have: $$d = {{params.speed}} \\cdot {{params.time}}$$.\n    </pl-hint>\n    <pl-hint level=\"4\" data-type=\"text\">\n        Therefore, the total distance traveled is computed as: $$d = {{params.speed}} \\cdot {{params.time}}$$ in {{params.unitsDist}}.\n    </pl-hint>\n    <pl-hint level=\"5\" data-type=\"text\">\n        This will give us the final answer: $$d = {{correct_answers.distance}}\\, {{params.unitsDist}}$$.\n    </pl-hint>\n</pl-solution-panel>",
        "qrender.json": [
            {
                "question_template": "A car moves at a constant speed of {{params.speed}} {{params.unitsSpeed}} for {{params.time}} {{params.unitsTime}}. What is the total distance traveled (in {{params.unitsDist}})?",
                "questionInputs": [
                    {
                        "name": "distance",
                        "label": "Distance (in {{params.unitsDist}})",
                        "qtype": "number",
                        "comparison": "sigfig",
                        "digits": 3,
                        "units": "{{params.unitsDist}}"
                    }
                ],
                "image": null,
                "solution_render": [
                    "To find the total distance traveled, we can use the formula: d = v · t.",
                    "Here, d is the distance, v is the constant speed of the car, and t is the time traveled.",
                    "Substituting the known values, we have: d = {{params.speed}} · {{params.time}}.",
                    "Therefore, the total distance traveled is computed as: d = {{params.speed}} · {{params.time}} in {{params.unitsDist}}.",
                    "This will give us the final answer: d = {{correct_answers.distance}} {{params.unitsDist}}."
                ]
            }
        ]
    },
    "metadata": {
        "question": "A car moves at a constant speed of $60\\ \\text{km/h}$ for $2\\ \\text{hours}$. What is the total distance traveled? The correct answer is $120\\ \\text{km}$",
        "title": "DistanceTraveledByCar",
        "topics": [
            "Kinematics",
            "Time and Motion Analysis"
        ],
        "isAdaptive": "True"
    }
}