"""create question and file tables

Revision ID: 4758b80f6d81
Revises: e847a5111ae3
Create Date: 2025-08-06 16:34:54.583925

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '4758b80f6d81'
down_revision: Union[str, Sequence[str], None] = 'e847a5111ae3'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('question',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('qtype', sa.JSON(), nullable=True),
    sa.Column('title', sqlmodel.sql.sqltypes.AutoString(), nullable=True), # type: ignore
    sa.Column('topic', sa.JSON(), nullable=True),
    sa.Column('isAdaptive', sa.JSON(), nullable=True),
    sa.Column('createdBy', sqlmodel.sql.sqltypes.AutoString(), nullable=True), # type: ignore
    sa.Column('language', sa.JSON(), nullable=True),
    sa.Column('ai_generated', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_question_id'), 'question', ['id'], unique=True)
    op.create_table('file',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('question_id', sa.Uuid(), nullable=False),
    sa.ForeignKeyConstraint(['question_id'], ['question.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('file')
    op.drop_index(op.f('ix_question_id'), table_name='question')
    op.drop_table('question')
    # ### end Alembic commands ###
