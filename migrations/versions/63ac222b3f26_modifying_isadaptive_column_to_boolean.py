"""Modifying isAdaptive column to boolean

Revision ID: 63ac222b3f26
Revises: a2424fcd1a91
Create Date: 2025-08-14 12:26:02.517634

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = "63ac222b3f26"
down_revision: Union[str, Sequence[str], None] = "a2424fcd1a91"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("question", schema=None, recreate="auto") as batch_op:
        batch_op.alter_column(
            "isAdaptive", type_=sa.Boolean(), nullable=False, server_default=sa.text("1")
        )
    op.execute(sa.text("UPDATE question SET isAdaptive = 0 WHERE isAdaptive IS NULL"))
    op.execute(sa.text("UPDATE question SET isAdaptive = 1 WHERE isAdaptive IS 0"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("question", schema=None) as batch_op:
        batch_op.alter_column(
            "isAdaptive", existing_type=sa.Boolean(), type_=sqlite.JSON(), nullable=True
        )
    # ### end Alembic commands ###
